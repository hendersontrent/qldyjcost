library(readr)
yjcosts <- read_csv("data-raw/yjcosts.csv")
View(yjcosts)
View(yjcosts)
library(readr)
yjcosts <- read_csv("data-raw/yjcosts.csv")
View(yjcosts)
head(yjcosts)
usethis::use_data(yjcosts, overwrite = TRUE)
mean(c(3.5, 3.4, 3.0, 1.6, 1.2))
url <- "https://www.abs.gov.au/statistics/economy/price-indexes-and-inflation/consumer-price-index-australia/mar-quarter-2024/640101.xlsx"
temp <- tempfile()
download.file(url, temp)
tmp <- readxl::read_excel(temp, sheet = 'Data1')
tmp <- readxl::read_excel(unz(temp), sheet = 'Data1')
tmp <- readxl::read_excel(unzip(temp), sheet = 'Data1')
temp <- tempfile()
download.file(url, temp, mode = "wb")
tmp <- readxl::read_excel(unzip(temp), sheet = 'Data1')
cpi <- XLConnect::readWorksheetFromFile(file = temp, sheet = "Data1")
url <- "https://www.abs.gov.au/statistics/economy/price-indexes-and-inflation/consumer-price-index-australia/mar-quarter-2024/640101.xlsx"
temp <- tempfile()
download.file(url, temp, mode = "wb")
cpi <- XLConnect::readWorksheetFromFile(file = temp, sheet = "Data1")
tmp <- readxl::read_excel(unzip(temp), sheet = 2)
x <- readxl::read_excel("C:/Users/Trent.Henderson/Downloads/640101 (1).xlsx", sheet = 2)
View(x)
colnames(x)
View(x)
library(dplyr)
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
View(cpi)
cpi <- cpi[grepl("^\\d{8}$", cpi$...1), ]
cpi <- x
cpi2 <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi2 <- cpi2[grepl("^\\d{8}$", cpi2$...1), ]
cpi2 <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
View(cpi2)
grepl("^\\d{8}$", cpi2$...1)
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
View(cpi)
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
colnames(cpi) <- c("year", "inflation_index")
cpi$year <- as.Date(cpi$year, origin = "1900-01-01")
View(cpi)
as.Date(17777, origin = "1900-01-01")
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
colnames(cpi) <- c("year", "inflation_index")
View(cpi)
cpi$year <- as.Date(cpi$year, origin = "1900-01-01")
cpi$year <- as.Date(as.integer(cpi$year), origin = "1900-01-01")
View(cpi)
calendar_to_fy <- function(x, format = NULL){
if(is.null(format)){stop("Date format required.")}
x <- as.Date(x, format = format)
m <- as.integer(format(as.Date(x, format = format), "%m"))
y <- as.integer(format(as.Date(x, format = format), "%y"))
fy <- paste0("FY ", ifelse(m < 7, y - 1, y), "/", ifelse(m < 7, y, y + 1))
return(fy)
}
calendar_to_fy(cpi$year)
calendar_to_fy(cpi$year, format = "%Y-%m-%d")
View(yjcosts)
calendar_to_fy <- function(x, format = NULL){
if(is.null(format)){stop("Date format required.")}
x <- as.Date(x, format = format)
m <- as.integer(format(as.Date(x, format = format), "%m"))
y <- as.integer(format(as.Date(x, format = format), "%Y"))
fy <- paste0("FY ", ifelse(m < 7, y - 1, y), "-", ifelse(m < 7, y, y + 1))
return(fy)
}
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
colnames(cpi) <- c("year", "inflation_index")
cpi$year <- as.Date(as.integer(cpi$year), origin = "1900-01-01")
cpi$fy <- calendar_to_fy(cpi$year)
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
colnames(cpi) <- c("year", "inflation_index")
cpi$year <- as.Date(as.integer(cpi$year), origin = "1900-01-01")
cpi$fy <- calendar_to_fy(cpi$year, format = "%Y-%m-%d")
calendar_to_fy <- function(x, format = NULL){
if(is.null(format)){stop("Date format required.")}
x <- as.Date(x, format = format)
m <- as.integer(format(as.Date(x, format = format), "%m"))
y <- as.integer(format(as.Date(x, format = format), "%Y"))
fy <- paste0(ifelse(m < 7, y - 1, y), "-", ifelse(m < 7, y, y + 1))
return(fy)
}
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
colnames(cpi) <- c("year", "inflation_index")
cpi$year <- as.Date(as.integer(cpi$year), origin = "1900-01-01")
cpi$fy <- calendar_to_fy(cpi$year, format = "%Y-%m-%d")
calendar_to_fy <- function(x, format = NULL){
if(is.null(format)){stop("Date format required.")}
x <- as.Date(x, format = format)
m <- as.integer(format(as.Date(x, format = format), "%m"))
Y <- as.integer(format(as.Date(x, format = format), "%Y"))
y <- as.integer(format(as.Date(x, format = format), "%y"))
fy <- paste0(ifelse(m < 7, Y - 1, Y), "-", ifelse(m < 7, y, y + 1))
return(fy)
}
cpi <- x
cpi <- cpi[, c("...1", "Index Numbers ;  All groups CPI ;  Australia ;")]
cpi <- cpi[grepl("^\\d{5}$", cpi$...1), ]
colnames(cpi) <- c("year", "inflation_index")
cpi$year <- as.Date(as.integer(cpi$year), origin = "1900-01-01")
cpi$fy <- calendar_to_fy(cpi$year, format = "%Y-%m-%d")
grepl("^\\d{4}-^\\d{2}$", "2014-15")
grepl("^\\d{4}-\\d{2}$", "2014-15")
fy <- "2014-15"
vec <- cpi[cpi$fy == fy, cpi$inflation_index]
vec <- cpi[cpi$fy == fy, c("inflation_index")]
View(vec)
View(yjcosts)
unique(yjcosts[yjcosts$type == "Court", c("fy")])
unique(as.character(yjcosts[yjcosts$type == "Court", c("fy")]))
unique(as.vector(yjcosts[yjcosts$type == "Court", c("fy")]))
as.character(unique(yjcosts[yjcosts$type == "Court", c("fy")]))
court_fy <- as.character(unique(yjcosts[yjcosts$type == "Court", c("fy")]))
police_fy <- as.character(unique(yjcosts[yjcosts$type == "Police", c("fy")]))
wider_fy <- as.character(unique(yjcosts[yjcosts$type == "Wodier social", c("fy")]))
100 + (100 * 0.506)
fy <- "2023-24"
adj <- yjcosts
adj$new_year <- fy
View(adj)
adj$new_fy <- fy
"2016-17" < "2023-24"
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy, ...)
avg_cpi <- function(cpi, fy = NULL, ...){
stopifnot(inherits(cpi, "cpi") == TRUE)
stopifnot(!is.null(fy))
stopifnot(grepl("^\\d{4}-\\d{2}$", fy))
avg <- mean(cpi[cpi$fy == fy, c("inflation_index")], ...)
return(avg)
}
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy)
cpi <- structure(cpi, class = c("cpi", "data.frame"))
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy)
cpi[cpi$fy == fy, c("inflation_index")]
mean(cpi[cpi$fy == fy, c("inflation_index")])
View(cpi)
cpi$inflation_index <- as.numeric(cpi$inflation_index)
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy, na.rm = TRUE)
cpi[cpi$fy == fy, c("inflation_index")]
mean(cpi[cpi$fy == fy, c("inflation_index")])
adj %>% mutate(avg_cpi_old = avg_cpi(cpi, fy, na.rm = TRUE))
avg_cpi(cpi, "2016-17", na.rm = TRUE)
avg_cpi <- function(cpi, fy = NULL, ...){
stopifnot(inherits(cpi, "cpi") == TRUE)
stopifnot(!is.null(fy))
stopifnot(grepl("^\\d{4}-\\d{2}$", fy))
#avg <- mean(cpi[cpi$fy == fy, c("inflation_index")], ...)
avg <- sapply(fy, function(f) {
mean(cpi[cpi$fy == f, "inflation_index"], ...)
})
return(avg)
}
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy, na.rm = TRUE)
adj$avg_cpi_new <- avg_cpi(cpi, adj$new_fy, na.rm = TRUE)
avg_cpi(cpi, "2016-17", na.rm = TRUE)
avg_cpi <- function(cpi, fy = NULL, ...){
stopifnot(inherits(cpi, "cpi") == TRUE)
stopifnot(!is.null(fy))
stopifnot(grepl("^\\d{4}-\\d{2}$", fy))
#avg <- mean(cpi[cpi$fy == fy, c("inflation_index")], ...)
avg <- sapply(fy, function(f) {
mean(cpi[cpi$fy == f, "inflation_index"], ...)
})
avg <- as.vector(avg)
return(avg)
}
avg_cpi(cpi, "2016-17", na.rm = TRUE)
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy, na.rm = TRUE)
adj$avg_cpi_new <- avg_cpi(cpi, adj$new_fy, na.rm = TRUE)
adj$new_cost <- adj$cost + (adj$cost * ifelse(adj$fy < adj$new_fy, ((avg_cpi_new / avg_cpi_old) - 1), ((avg_cpi_old / avg_cpi_new) - 1)))
adj <- yjcosts
adj$new_fy <- fy
adj$avg_cpi_old <- avg_cpi(cpi, adj$fy, na.rm = TRUE)
adj$avg_cpi_new <- avg_cpi(cpi, adj$new_fy, na.rm = TRUE)
adj$new_cost <- adj$cost + (adj$cost * ifelse(adj$fy < adj$new_fy,
((adj$avg_cpi_new / adj$avg_cpi_old) - 1),
((adj$avg_cpi_old / adj$avg_cpi_new) - 1)))
url <- "https://www.abs.gov.au/statistics/economy/price-indexes-and-inflation/consumer-price-index-australia/mar-quarter-2024/640101.xlsx"
temp <- tempfile()
download.file(url, temp, mode = "wb")
cpi <- readxl::read_excel(temp, sheet = 2)
View(cpi)
View(cpi)
colnames(cpi)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(qldyjcost)
devtools::document()
library(qldyjcost)
